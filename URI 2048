#include<iostream>
#include<algorithm>
using namespace std;
using ll = long long;
using pair_ll = pair<long long, long long>;

ll subtraction(ll &a, ll &b)	{return max(a, b) - min(a, b);}

ll counter(ll *vector, ll &vector_size, ll &drawn_position, ll &element){
	ll out=1, i=0;
	for(i=drawn_position-2; i>=0			and vector[i]==element; ++out, --i);
	for(i=drawn_position;	i<vector_size	and vector[i]==element; ++out, ++i);
	return out;
}

int main(){
	ll i, j, test_case, vector_size, drawn_position, element, count;
	pair_ll subvector_pos;	// First = Less, second = Greater
	pair_ll every_move;		// First = Gugu, second = Dadriel
	pair_ll diference;		// First = Gugu, second = Dadriel

	scanf("%llu %lld", &vector_size, &test_case);
	ll vector[vector_size], subvector[vector_size];
	for(i=0; i<vector_size; ++i){
		scanf("%lld", &vector[i]);
	}

	while(test_case--){
		scanf("%lld %lld", &subvector_pos.first, &subvector_pos.second);	// Read the extremes of the subvector
		scanf("%lld", &drawn_position);										// Read number drawn
		scanf("%lld %lld", &every_move.first, &every_move.second);			// Read number chosen by Gugu and Dadriel

		for(i=subvector_pos.first-1, j=0; i<subvector_pos.second; ++i, ++j){// 'j' has the size of the subvector
			subvector[j]=vector[i];
		}
		sort(subvector, subvector+j);

		element = subvector[drawn_position - 1];
		count = counter(subvector, j, drawn_position, element);

		diference.first  = subtraction(every_move.first, count);
		diference.second = subtraction(every_move.second, count);

		if		(diference.first == diference.second)	printf("%lld %lld E\n", element, count);
		else if	(diference.first < diference.second)	printf("%lld %lld G\n", element, count);
		else											printf("%lld %lld D\n", element, count);
	}
}
